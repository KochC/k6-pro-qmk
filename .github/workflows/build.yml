name: Build Firmware

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Clone SonixQMK
        run: git clone https://github.com/SonixQMK/qmk_firmware.git
      - name: Install qmk deps
        run: cd qmk_firmware && ./util/qmk_install.sh && python3 -m pip install qmk
      - name: fix gcc
        run: sudo bash .github/scripts/update-gcc10-ubuntu.sh
      - name: Install git submodules
        run: cd qmk_firmware && make git-submodule
      - name: Copy custom keymaps
        run: cp -rp keyboards/keychron/k6/keymaps/ansi qmk_firmware/keyboards/keychron/k6/keymaps
      - name: Compile firmware
        run: cd qmk_firmware && make keychron/k6/rgb/ansi:ansi
      - name: Upload compiled firmware (build artifact)
        uses: actions/upload-artifact@v2
        with:
          name: Keychron K6 pro QMK Firmware
          path: qmk_firmware/keychron_k6_rgb_ansi.bin
      - name: Upload compiled firmware (tagged release)
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            qmk_firmware/keychron_k6_rgb_ansi.bin

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
#      - name: Upload Release Asset
#        id: upload-release-asset 
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#          asset_path: ./my-artifact.zip
#          asset_name: my-artifact.zip
#          asset_content_type: application/zip
